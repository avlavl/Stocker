/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Invest;

import java.awt.Cursor;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URL;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author zhangxr
 */
public class MainView extends javax.swing.JFrame {

    public class CheckData {

        public CheckData(String m, String para) {
            mode = m;
            parameter = para;
        }
        public String mode;
        public String parameter;
        public String status;
        public int days;
        public double key;
        public double percent;
        public String amount;
    }

    /**
     * Creates new form StockerView
     */
    public MainView() {
        initComponents();
        setLocationRelativeTo(null);
        final URL filename = getClass().getResource("/resource/Livermore2.jpg");
        if (filename != null) {
            setIconImage(new ImageIcon(filename, "Icon").getImage());
        }

        importFile(fileIn);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItemCopy = new javax.swing.JMenuItem();
        jMenuItemClear = new javax.swing.JMenuItem();
        jPanelMain = new javax.swing.JPanel();
        jLabelStockName = new javax.swing.JLabel();
        jLabelDate = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePoint = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaMain = new javax.swing.JTextArea();
        jLabelSEDate = new javax.swing.JLabel();
        jLabelSEDash = new javax.swing.JLabel();
        jTextFieldSDate = new javax.swing.JTextField();
        jTextFieldEDate = new javax.swing.JTextField();
        jLabelClose = new javax.swing.JLabel();
        jPanelSysFilter = new javax.swing.JPanel();
        jLabelPara1 = new javax.swing.JLabel();
        jLabelPara2 = new javax.swing.JLabel();
        jLabelPara3 = new javax.swing.JLabel();
        jLabelPara4 = new javax.swing.JLabel();
        jLabelDash1 = new javax.swing.JLabel();
        jLabelDash2 = new javax.swing.JLabel();
        jLabelDash3 = new javax.swing.JLabel();
        jLabelDash4 = new javax.swing.JLabel();
        jTextFieldPS1 = new javax.swing.JTextField();
        jTextFieldPE1 = new javax.swing.JTextField();
        jTextFieldPS2 = new javax.swing.JTextField();
        jTextFieldPE2 = new javax.swing.JTextField();
        jTextFieldPS3 = new javax.swing.JTextField();
        jTextFieldPE3 = new javax.swing.JTextField();
        jTextFieldPS4 = new javax.swing.JTextField();
        jTextFieldPE4 = new javax.swing.JTextField();
        jButtonFilterStart = new javax.swing.JButton();
        jButtonFilterCheck = new javax.swing.JButton();
        jButtonCheckUp = new javax.swing.JButton();
        jButtonEvaluate = new javax.swing.JButton();
        jPanelCongfig = new javax.swing.JPanel();
        jTextFieldDiffFactor = new javax.swing.JTextField();
        jTextFieldSlope = new javax.swing.JTextField();
        jLabelSlope = new javax.swing.JLabel();
        jLabelDiffFactor = new javax.swing.JLabel();
        jTextFieldWinLevel = new javax.swing.JTextField();
        jTextFieldStartPoint = new javax.swing.JTextField();
        jLabelStartPoint = new javax.swing.JLabel();
        jLabelWinLevel = new javax.swing.JLabel();
        jButtonInvestEva = new javax.swing.JButton();
        jButtonInvestRecord = new javax.swing.JButton();
        jButtonInvestChart = new javax.swing.JButton();
        jLabelLatestPoint = new javax.swing.JLabel();
        jTextFieldLatestPoint = new javax.swing.JTextField();
        jLabelInput = new javax.swing.JLabel();
        jLabelBasePoint = new javax.swing.JLabel();
        jTextFieldInvestCoef = new javax.swing.JTextField();
        jLabelInvestCoef = new javax.swing.JLabel();
        jLabelCurrentAsset = new javax.swing.JLabel();
        jLabelCurrentRatio = new javax.swing.JLabel();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemImport = new javax.swing.JMenuItem();
        jMenuIndex = new javax.swing.JMenu();
        jMenuItemSZZS = new javax.swing.JMenuItem();
        jMenuItemSZCZ = new javax.swing.JMenuItem();
        jMenuItemSWZQ = new javax.swing.JMenuItem();
        jMenuItemZZJG = new javax.swing.JMenuItem();
        jMenuItemZZHB = new javax.swing.JMenuItem();
        jMenuItemGZYY = new javax.swing.JMenuItem();
        jMenuItemYLCY = new javax.swing.JMenuItem();
        jMenuRun = new javax.swing.JMenu();
        jMenuItemDZH = new javax.swing.JMenuItem();
        jMenuItemTDX = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuItemAbout = new javax.swing.JMenuItem();

        jMenuItemCopy.setText("复制");
        jMenuItemCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCopyActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItemCopy);

        jMenuItemClear.setText("清除");
        jMenuItemClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemClearActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItemClear);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("智能证券系统-基金定投");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelStockName.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelStockName.setForeground(new java.awt.Color(204, 0, 204));
        jLabelStockName.setText("上证指数(000001)");
        jLabelStockName.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jPanelMain.add(jLabelStockName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 8, -1, -1));

        jLabelDate.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabelDate.setForeground(new java.awt.Color(0, 0, 204));
        jLabelDate.setText("日期：----/--/--");
        jPanelMain.add(jLabelDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, -1, -1));

        jTablePoint.getTableHeader().setFont(new java.awt.Font("微软雅黑", 0, 12));
        jTablePoint.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jTablePoint.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"定投轮数", null, "平均日化率", ""},
                {"累加投入", null, "平均持仓期", null},
                {"累加产出", null, "最大投入", ""},
                {"净利润", null, "平均投入", null},
                {"总收益率", null, "最大亏损", null},
                {"测试年限", null, "最大回撤比", ""},
                {"定投笔数", "", "平均离差", null},
                {"定投时间比", null, "平均负离差", null},
                {"最长周期", "", "最小负离差", null},
                {"最长定投轮", null, "平均买入比", null},
                {"平均定投轮", null, "最大买入比", null}
            },
            new String [] {
                "统计指标", "全部交易", "统计指标", "全部交易"
            }
        ));
        jScrollPane1.setViewportView(jTablePoint);
        if (jTablePoint.getColumnModel().getColumnCount() > 0) {
            jTablePoint.getColumnModel().getColumn(0).setMaxWidth(75);
            jTablePoint.getColumnModel().getColumn(2).setMaxWidth(75);
        }

        jPanelMain.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 340, 206));

        jTextAreaMain.setColumns(20);
        jTextAreaMain.setFont(new java.awt.Font("仿宋", 0, 11)); // NOI18N
        jTextAreaMain.setRows(5);
        jTextAreaMain.setComponentPopupMenu(jPopupMenu1);
        jTextAreaMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextAreaMainMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTextAreaMain);

        jPanelMain.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 340, 80));

        jLabelSEDate.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabelSEDate.setText("日期：");
        jPanelMain.add(jLabelSEDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        jLabelSEDash.setText("-");
        jPanelMain.add(jLabelSEDash, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 275, -1, -1));

        jTextFieldSDate.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jTextFieldSDate.setText("----/--/--");
        jPanelMain.add(jTextFieldSDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, 75, -1));

        jTextFieldEDate.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jTextFieldEDate.setText("----/--/--");
        jPanelMain.add(jTextFieldEDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 270, 75, -1));

        jLabelClose.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabelClose.setForeground(new java.awt.Color(250, 0, 0));
        jLabelClose.setText("收盘：--");
        jPanelMain.add(jLabelClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, -1, -1));

        jPanelSysFilter.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "优选系统", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("微软雅黑", 0, 12))); // NOI18N
        jPanelSysFilter.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jPanelSysFilter.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelPara1.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabelPara1.setText("P1:");
        jPanelSysFilter.add(jLabelPara1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 27, -1, -1));

        jLabelPara2.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabelPara2.setText("P2:");
        jPanelSysFilter.add(jLabelPara2, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 27, -1, -1));

        jLabelPara3.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabelPara3.setText("P3:");
        jPanelSysFilter.add(jLabelPara3, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 50, -1, -1));

        jLabelPara4.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabelPara4.setText("P4:");
        jPanelSysFilter.add(jLabelPara4, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 51, -1, -1));

        jLabelDash1.setText("-");
        jPanelSysFilter.add(jLabelDash1, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 29, -1, -1));

        jLabelDash2.setText("-");
        jPanelSysFilter.add(jLabelDash2, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 30, -1, -1));

        jLabelDash3.setText("-");
        jPanelSysFilter.add(jLabelDash3, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 52, -1, -1));

        jLabelDash4.setText("-");
        jPanelSysFilter.add(jLabelDash4, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 52, -1, -1));

        jTextFieldPS1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jTextFieldPS1.setText("350");
        jPanelSysFilter.add(jTextFieldPS1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 26, 30, -1));

        jTextFieldPE1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jTextFieldPE1.setText("450");
        jPanelSysFilter.add(jTextFieldPE1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 26, 30, -1));

        jTextFieldPS2.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jTextFieldPS2.setText("200");
        jPanelSysFilter.add(jTextFieldPS2, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 26, 30, -1));

        jTextFieldPE2.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jTextFieldPE2.setText("220");
        jPanelSysFilter.add(jTextFieldPE2, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 26, 30, -1));

        jTextFieldPS3.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jTextFieldPS3.setText("20");
        jPanelSysFilter.add(jTextFieldPS3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 30, -1));

        jTextFieldPE3.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jTextFieldPE3.setText("100");
        jPanelSysFilter.add(jTextFieldPE3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 30, -1));

        jTextFieldPS4.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jTextFieldPS4.setText("0");
        jPanelSysFilter.add(jTextFieldPS4, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 50, 30, -1));

        jTextFieldPE4.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jTextFieldPE4.setText("20");
        jPanelSysFilter.add(jTextFieldPE4, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 50, 30, -1));

        jButtonFilterStart.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jButtonFilterStart.setText("开始");
        jButtonFilterStart.setMargin(new java.awt.Insets(2, 8, 2, 8));
        jButtonFilterStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFilterStartActionPerformed(evt);
            }
        });
        jPanelSysFilter.add(jButtonFilterStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 23, -1, -1));

        jButtonFilterCheck.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jButtonFilterCheck.setText("查看");
        jButtonFilterCheck.setEnabled(false);
        jButtonFilterCheck.setMargin(new java.awt.Insets(2, 8, 2, 8));
        jButtonFilterCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFilterCheckActionPerformed(evt);
            }
        });
        jPanelSysFilter.add(jButtonFilterCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 48, -1, -1));

        jPanelMain.add(jPanelSysFilter, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 300, 290, 90));

        jButtonCheckUp.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jButtonCheckUp.setText("检测");
        jButtonCheckUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCheckUpActionPerformed(evt);
            }
        });
        jPanelMain.add(jButtonCheckUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 270, -1, 30));

        jButtonEvaluate.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jButtonEvaluate.setText("评估");
        jButtonEvaluate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEvaluateActionPerformed(evt);
            }
        });
        jPanelMain.add(jButtonEvaluate, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 270, -1, 30));

        jPanelCongfig.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "定投配置", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("微软雅黑", 0, 12))); // NOI18N
        jPanelCongfig.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextFieldDiffFactor.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jTextFieldDiffFactor.setText("10");
        jPanelCongfig.add(jTextFieldDiffFactor, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 55, 40, -1));

        jTextFieldSlope.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jTextFieldSlope.setText("210");
        jPanelCongfig.add(jTextFieldSlope, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 25, 40, -1));

        jLabelSlope.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabelSlope.setText("斜率(X100)：");
        jPanelCongfig.add(jLabelSlope, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 25, -1, -1));

        jLabelDiffFactor.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabelDiffFactor.setText("离差因子(X10)：");
        jPanelCongfig.add(jLabelDiffFactor, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 55, -1, -1));

        jTextFieldWinLevel.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jTextFieldWinLevel.setText("50");
        jPanelCongfig.add(jTextFieldWinLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 55, 40, -1));

        jTextFieldStartPoint.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jTextFieldStartPoint.setText("410");
        jPanelCongfig.add(jTextFieldStartPoint, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 25, 40, -1));

        jLabelStartPoint.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabelStartPoint.setText("起始值：");
        jPanelCongfig.add(jLabelStartPoint, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 25, -1, -1));

        jLabelWinLevel.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabelWinLevel.setText("止赢位：");
        jPanelCongfig.add(jLabelWinLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 55, -1, -1));

        jButtonInvestEva.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jButtonInvestEva.setText("投资评测");
        jButtonInvestEva.setMargin(new java.awt.Insets(2, 8, 2, 8));
        jButtonInvestEva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInvestEvaActionPerformed(evt);
            }
        });
        jPanelCongfig.add(jButtonInvestEva, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, -1, 30));

        jButtonInvestRecord.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jButtonInvestRecord.setText("投资记录");
        jButtonInvestRecord.setMargin(new java.awt.Insets(2, 8, 2, 8));
        jButtonInvestRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInvestRecordActionPerformed(evt);
            }
        });
        jPanelCongfig.add(jButtonInvestRecord, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, -1, 30));

        jButtonInvestChart.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jButtonInvestChart.setText("投资曲线");
        jButtonInvestChart.setMargin(new java.awt.Insets(2, 8, 2, 8));
        jButtonInvestChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInvestChartActionPerformed(evt);
            }
        });
        jPanelCongfig.add(jButtonInvestChart, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, 30));

        jPanelMain.add(jPanelCongfig, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 50, 290, 140));

        jLabelLatestPoint.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabelLatestPoint.setText("最新点位：");
        jPanelMain.add(jLabelLatestPoint, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 213, -1, -1));

        jTextFieldLatestPoint.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jTextFieldLatestPoint.setText("3000");
        jTextFieldLatestPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLatestPointActionPerformed(evt);
            }
        });
        jPanelMain.add(jTextFieldLatestPoint, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 210, 70, -1));

        jLabelInput.setFont(new java.awt.Font("楷体", 0, 14)); // NOI18N
        jLabelInput.setForeground(new java.awt.Color(255, 0, 0));
        jLabelInput.setText("投入金额：----元");
        jPanelMain.add(jLabelInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 210, -1, -1));

        jLabelBasePoint.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabelBasePoint.setForeground(new java.awt.Color(102, 0, 102));
        jLabelBasePoint.setText("基点：--");
        jPanelMain.add(jLabelBasePoint, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, -1, -1));

        jTextFieldInvestCoef.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jTextFieldInvestCoef.setText("10");
        jPanelMain.add(jTextFieldInvestCoef, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 250, 70, -1));

        jLabelInvestCoef.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabelInvestCoef.setText("定投系数：");
        jPanelMain.add(jLabelInvestCoef, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 250, -1, -1));

        jLabelCurrentAsset.setFont(new java.awt.Font("楷体", 0, 14)); // NOI18N
        jLabelCurrentAsset.setForeground(new java.awt.Color(255, 0, 0));
        jLabelCurrentAsset.setText("当前资产：----元");
        jPanelMain.add(jLabelCurrentAsset, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 230, -1, -1));

        jLabelCurrentRatio.setFont(new java.awt.Font("楷体", 0, 14)); // NOI18N
        jLabelCurrentRatio.setForeground(new java.awt.Color(255, 0, 0));
        jLabelCurrentRatio.setText("当前收益：----%");
        jPanelMain.add(jLabelCurrentRatio, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 250, -1, -1));

        getContentPane().add(jPanelMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 660, 400));

        jMenuFile.setText("文件");

        jMenuItemImport.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemImport.setText("导入...");
        jMenuItemImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemImportActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemImport);

        jMenuBar.add(jMenuFile);

        jMenuIndex.setText("常用指数");

        jMenuItemSZZS.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemSZZS.setText("上证指数");
        jMenuItemSZZS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSZZSActionPerformed(evt);
            }
        });
        jMenuIndex.add(jMenuItemSZZS);

        jMenuItemSZCZ.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemSZCZ.setText("深圳成指");
        jMenuItemSZCZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSZCZActionPerformed(evt);
            }
        });
        jMenuIndex.add(jMenuItemSZCZ);

        jMenuItemSWZQ.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_3, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemSWZQ.setText("申万证券");
        jMenuItemSWZQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSWZQActionPerformed(evt);
            }
        });
        jMenuIndex.add(jMenuItemSWZQ);

        jMenuItemZZJG.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemZZJG.setText("中证军工");
        jMenuItemZZJG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemZZJGActionPerformed(evt);
            }
        });
        jMenuIndex.add(jMenuItemZZJG);

        jMenuItemZZHB.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_5, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemZZHB.setText("中证环保");
        jMenuItemZZHB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemZZHBActionPerformed(evt);
            }
        });
        jMenuIndex.add(jMenuItemZZHB);

        jMenuItemGZYY.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_6, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemGZYY.setText("国证医药");
        jMenuItemGZYY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGZYYActionPerformed(evt);
            }
        });
        jMenuIndex.add(jMenuItemGZYY);

        jMenuItemYLCY.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_7, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemYLCY.setText("养老产业");
        jMenuItemYLCY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemYLCYActionPerformed(evt);
            }
        });
        jMenuIndex.add(jMenuItemYLCY);

        jMenuBar.add(jMenuIndex);

        jMenuRun.setText("运行");

        jMenuItemDZH.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemDZH.setText("大智慧");
        jMenuItemDZH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDZHActionPerformed(evt);
            }
        });
        jMenuRun.add(jMenuItemDZH);

        jMenuItemTDX.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemTDX.setText("通达信");
        jMenuItemTDX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemTDXActionPerformed(evt);
            }
        });
        jMenuRun.add(jMenuItemTDX);

        jMenuBar.add(jMenuRun);

        jMenuHelp.setText("帮助");

        jMenuItemAbout.setText("关于");
        jMenuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAboutActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuItemAbout);

        jMenuBar.add(jMenuHelp);

        setJMenuBar(jMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemImportActionPerformed
        importFile(null);
    }//GEN-LAST:event_jMenuItemImportActionPerformed

    private void jMenuItemSZZSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSZZSActionPerformed
        jTextFieldStartPoint.setText("410");
        jTextFieldSlope.setText("210");
        importFile("data\\W上证指数.txt");
    }//GEN-LAST:event_jMenuItemSZZSActionPerformed

    private void jMenuItemSZCZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSZCZActionPerformed
        jTextFieldStartPoint.setText("1000");
        jTextFieldSlope.setText("750");
        importFile("data\\W深证成指.txt");
    }//GEN-LAST:event_jMenuItemSZCZActionPerformed

    private void jMenuItemSWZQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSWZQActionPerformed
        jTextFieldStartPoint.setText("1000");
        jTextFieldSlope.setText("700");
        importFile("data\\W申万证券.txt");
    }//GEN-LAST:event_jMenuItemSWZQActionPerformed

    private void jMenuItemZZJGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemZZJGActionPerformed
        jTextFieldStartPoint.setText("2500");
        jTextFieldSlope.setText("1000");
        importFile("data\\W中证军工.txt");
    }//GEN-LAST:event_jMenuItemZZJGActionPerformed

    private void jMenuItemZZHBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemZZHBActionPerformed
        jTextFieldStartPoint.setText("850");
        jTextFieldSlope.setText("400");
        importFile("data\\W中证环保.txt");
    }//GEN-LAST:event_jMenuItemZZHBActionPerformed

    private void jMenuItemGZYYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGZYYActionPerformed
        jTextFieldStartPoint.setText("5000");
        jTextFieldSlope.setText("1800");
        importFile("data\\W国证医药.txt");
    }//GEN-LAST:event_jMenuItemGZYYActionPerformed

    private void jMenuItemYLCYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemYLCYActionPerformed
        jTextFieldStartPoint.setText("1400");
        jTextFieldSlope.setText("1000");
        importFile("data\\W养老产业.txt");
    }//GEN-LAST:event_jMenuItemYLCYActionPerformed

    private void jMenuItemDZHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDZHActionPerformed
        runExeFile("C:\\dzh365\\dzh2.exe");
    }//GEN-LAST:event_jMenuItemDZHActionPerformed

    private void jMenuItemTDXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemTDXActionPerformed
        runExeFile("C:\\new_tdx\\TdxW.exe");
    }//GEN-LAST:event_jMenuItemTDXActionPerformed

    private void jMenuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAboutActionPerformed
        JOptionPane.showMessageDialog(new JFrame(), "智能证券系统-基金定投 V16.10\n版权所有(C) 张向荣(Aioros Zhang)");
    }//GEN-LAST:event_jMenuItemAboutActionPerformed

    private void jTextAreaMainMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextAreaMainMouseReleased
        if (evt.isPopupTrigger()) {
            jPopupMenu1.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTextAreaMainMouseReleased

    private void jMenuItemClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemClearActionPerformed
        jTextAreaMain.setText("");
    }//GEN-LAST:event_jMenuItemClearActionPerformed

    private void jMenuItemCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCopyActionPerformed
        jTextAreaMain.selectAll();
        jTextAreaMain.copy();
    }//GEN-LAST:event_jMenuItemCopyActionPerformed

    private void jButtonInvestChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInvestChartActionPerformed
        InvestChart tc = new InvestChart(this, false, this);
    }//GEN-LAST:event_jButtonInvestChartActionPerformed

    private void jButtonInvestRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInvestRecordActionPerformed
        if (evaluated) {
            InvestTable investTable = new InvestTable(this, false, strategy);
        } else {
            JOptionPane.showMessageDialog(this, "请先进行评测再查看投资记录");
        }
    }//GEN-LAST:event_jButtonInvestRecordActionPerformed

    private void jButtonInvestEvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInvestEvaActionPerformed
        boolean ret = false;
        investCoef = Double.parseDouble(jTextFieldInvestCoef.getText());
        dateProcess();
        if (investDays == 0) {
            return;
        }
        getInvestMode();
        int p1 = 0, p2 = 0, p3 = 0, p4 = 0;
        String[] words = investPara.split(",");
        p1 = Integer.parseInt(words[0]);
        p2 = Integer.parseInt(words[1]);
        p3 = Integer.parseInt(words[2]);
        p4 = Integer.parseInt(words[3]);

        strategy = new Strategy(this);
        ret = strategy.sysInvestEva(p1, p2, p3, p4);
        if (!ret) {
            JOptionPane.showMessageDialog(new JFrame(), "无效的参数设置！");
            return;
        }
        SystemReport sr = updateSystemReport(strategy);
        updateTable(sr);
        updateMarket(eIdx);
        jLabelCurrentAsset.setText(String.format("当前资产：%.2f元", strategy.getCurrentAsset()));
        jLabelCurrentRatio.setText(String.format("当前收益：%.2f%%", strategy.getCurrentRatio()));
        evaluated = true;
    }//GEN-LAST:event_jButtonInvestEvaActionPerformed

    private void jButtonFilterStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFilterStartActionPerformed
        long time = System.currentTimeMillis();
        jTextAreaMain.setText("");
        investCoef = Double.parseDouble(jTextFieldInvestCoef.getText());
        dateProcess();
        if (investDays == 0) {
            return;
        }
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        SystemReport sr;
        ArrayList<SystemReport> srList = new ArrayList<>();
        int ps1 = Integer.parseInt(jTextFieldPS1.getText());
        int pe1 = Integer.parseInt(jTextFieldPE1.getText());
        int ps2 = Integer.parseInt(jTextFieldPS2.getText());
        int pe2 = Integer.parseInt(jTextFieldPE2.getText());
        int ps3 = Integer.parseInt(jTextFieldPS3.getText());
        int pe3 = Integer.parseInt(jTextFieldPE3.getText());
        int ps4 = Integer.parseInt(jTextFieldPS4.getText());
        int pe4 = Integer.parseInt(jTextFieldPE4.getText());

        for (int i = ps1; i <= pe1; i += 10) {
            for (int j = ps2; j <= pe2; j++) {
                for (int k = ps3; k <= pe3; k += 5) {
                    for (int l = ps4; l <= pe4; l++) {
                        strategy = new Strategy(this);
                        if (strategy.sysSimpleInvestEva(i, j, k, l)) {
                            String para = String.format("%d,%d,%d,%d", i, j, k, l);
                            sr = updateSimpleReport(para, strategy);
                            srList.add(sr);
                        }
                    }
                }
            }
        }
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));

        jButtonFilterCheck.setEnabled(true);
        Collections.sort(srList, (SystemReport arg0, SystemReport arg1) -> new Float(arg1.netProfit).compareTo(arg0.netProfit));
        rankTable = new RankTable(this, false, this, srList);

        time = System.currentTimeMillis() - time;
        float excTime = (float) time / 1000;
        System.out.println("Elapsed time: " + excTime + "s");
    }//GEN-LAST:event_jButtonFilterStartActionPerformed

    private void jButtonFilterCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFilterCheckActionPerformed
        rankTable.setVisible(true);
    }//GEN-LAST:event_jButtonFilterCheckActionPerformed

    private void jButtonCheckUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCheckUpActionPerformed
        ArrayList<String> modelList = new ArrayList<>();
        chkDataList = new ArrayList<>();

        try {
            File file = new File("ini/" + stockName + ".ini");
            if (!file.exists()) {
                JOptionPane.showMessageDialog(new JFrame(), "没有对应的\"" + stockName + ".ini\"文件！");
                return;
            }
            InputStreamReader isr = new InputStreamReader(new FileInputStream(file), "gbk");
            BufferedReader br = new BufferedReader(isr);
            String line;
            while ((line = br.readLine()) != null) {
                if (line.matches("^[A-Z].*")) {
                    modelList.add(line);
                }
            }
            br.close();
            isr.close();
        } catch (IOException | NumberFormatException e) {
            e.printStackTrace();
            return;
        }

        for (String line : modelList) {
            String[] words = line.split(":");
            String mode = words[0];
            String para = words[1];
            switch (mode) {
                case "MA":
                    //sysMAChk(para);
                    break;
                default:
                    break;
            }
        }

        CheckTable ct = new CheckTable(this, false, this);
    }//GEN-LAST:event_jButtonCheckUpActionPerformed

    private void jButtonEvaluateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEvaluateActionPerformed
        ArrayList<String> modelList = new ArrayList<>();
        chkDataList = new ArrayList<>();

        try {
            File file = new File("ini/" + stockName + ".ini");
            if (!file.exists()) {
                JOptionPane.showMessageDialog(new JFrame(), "没有对应的\"" + stockName + ".ini\"文件！");
                return;
            }
            InputStreamReader isr = new InputStreamReader(new FileInputStream(file), "gbk");
            BufferedReader br = new BufferedReader(isr);
            String line;
            while ((line = br.readLine()) != null) {
                if (line.matches("^[A-Z].*")) {
                    modelList.add(line);
                }
            }
            br.close();
            isr.close();
        } catch (IOException | NumberFormatException e) {
            e.printStackTrace();
            return;
        }

        dateProcess();
        if (investDays == 0) {
            return;
        }
        SystemReport sr;
        ArrayList<SystemReport> srList = new ArrayList<>();

        int p1 = 0, p2 = 0, p3 = 0;
        for (String line : modelList) {
            String[] words = line.split(":");
            String mode = words[0];
            String paras[] = words[1].split(" ");
            String[] ps = paras[0].split(",");
            try {
                p1 = Integer.parseInt(ps[0]);
                p2 = Integer.parseInt(ps[1]);
                p3 = Integer.parseInt(ps[2]);
            } catch (Exception e) {
            }
            switch (mode) {
                case "MA":
//                    if (sysInvestEva(p1, p2)) {
//                        String para = String.format("%d,%d", p1, p2);
//                        sr = updateSimpleReport(mode, para, strategy);
//                        srList.add(sr);
//                    }
                    break;
                default:
                    break;
            }
        }
        rankTable = new RankTable(this, false, this, srList);
    }//GEN-LAST:event_jButtonEvaluateActionPerformed

    private void jTextFieldLatestPointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLatestPointActionPerformed
        double startPoint = Double.parseDouble(jTextFieldStartPoint.getText());
        double slope = Double.parseDouble(jTextFieldSlope.getText());
        double diffFactor = Double.parseDouble(jTextFieldDiffFactor.getText());
        double latestPoint = Double.parseDouble(jTextFieldLatestPoint.getText());

        double basePoint = startPoint + rows * (slope / 100);
        jLabelBasePoint.setText(String.format("基点：%.2f", basePoint));
        double diffRate = latestPoint / basePoint;
        investCoef = Double.parseDouble(jTextFieldInvestCoef.getText());
        double input = (basePoint / investCoef) / Math.pow(diffRate, diffFactor / 10);
        if (diffRate <= 1) {
            jLabelInput.setText(String.format("投入金额：%.2f元", input));
        } else {
            jLabelInput.setText("投入金额：0.00元");
        }
    }//GEN-LAST:event_jTextFieldLatestPointActionPerformed

    /**
     ********************* Start of User-defined function ********************
     */
    protected void importFile(String fileName) {
        fileIn = fileName;
        if (fileName == null) {
            JFileChooser chooser = new JFileChooser("data/");
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Data File (*.txt)", "txt");
            chooser.setFileFilter(filter);
            chooser.setDialogTitle("Select Data File");
            int ret = chooser.showOpenDialog(this);
            if (ret == JFileChooser.APPROVE_OPTION) {
                fileIn = chooser.getSelectedFile().getPath();
            } else {
                return;
            }
        }

        try {
            File file = new File(fileIn);
            InputStreamReader isr = new InputStreamReader(new FileInputStream(file), "gbk");
            BufferedReader br = new BufferedReader(isr);
            String[] words = br.readLine().split("\t");
            stockName = words[1];
            stockCode = words[0].replaceAll("[\\pP\\p{Punct}]", "");
            jLabelStockName.setText(stockName + "(" + stockCode + ")");
            words = br.readLine().split("\t");
            column = words.length;
            dateList = new ArrayList<>();
            openList = new ArrayList<>();
            closeList = new ArrayList<>();
            priceList = new ArrayList<>();
            String line;
            while ((line = br.readLine()) != null) {
                words = line.split("\t");
                dateList.add(words[0]);
                openList.add(Double.parseDouble(words[1]));
                closeList.add(Double.parseDouble(words[4]));
                priceList.add(Double.parseDouble(words[4]));
            }
            rows = dateList.size();
            br.close();
            isr.close();
        } catch (IOException | NumberFormatException e) {
            e.printStackTrace();
        }
        jTextFieldSDate.setText(dateList.get(0));
        jTextFieldEDate.setText(dateList.get(rows - 1));
        updateMarket(rows - 1);
        jLabelCurrentAsset.setText("当前资产：----元");
        jLabelCurrentRatio.setText("当前收益：----%");
        evaluated = false;
    }

    public void investParaEva(String para) {
        String[] paras = para.replaceAll(" ", "").split(",");
        jTextFieldStartPoint.setText(paras[0]);
        jTextFieldSlope.setText(paras[1]);
        jTextFieldWinLevel.setText(paras[2]);
        jTextFieldDiffFactor.setText(paras[3]);

        jButtonInvestEva.doClick();
    }

    public void getInvestMode() {
        investPara = jTextFieldStartPoint.getText() + "," + jTextFieldSlope.getText() + "," + jTextFieldWinLevel.getText() + "," + jTextFieldDiffFactor.getText();
    }

    private void dateProcess() {
        String start = jTextFieldSDate.getText();
        String end = jTextFieldEDate.getText();
        if ((end.compareTo(start) <= 0)) {
            JOptionPane.showMessageDialog(this, "起始日期必须早于结束日期！");
            investDays = 0;
            return;
        }

        sIdx = -1;
        eIdx = 0;
        for (int i = 0; i < rows; i++) {
            if ((dateList.get(i).compareTo(start) >= 0) && (dateList.get(i).compareTo(end) <= 0)) {
                if (sIdx == -1) {
                    sIdx = i;
                }
                eIdx = i;
            }
        }
        testYears = (double) daysBetween(sIdx, eIdx) / 365.25;
        investDays = eIdx - sIdx + 1;
    }

    protected void updateMarket(int idx) {
        jLabelDate.setText("日期：" + dateList.get(idx));

        double margin = closeList.get(idx) - closeList.get(idx - 1);
        double ratio = 100 * (closeList.get(idx) - closeList.get(idx - 1)) / closeList.get(idx - 1);
        if (margin > 0) {
            jLabelClose.setForeground(new java.awt.Color(250, 0, 0));
            jLabelClose.setText(String.format("收盘：%s  %.2f/%5.2f%%", closeList.get(idx), margin, ratio));
        } else {
            jLabelClose.setForeground(new java.awt.Color(0, 150, 0));
            jLabelClose.setText(String.format("收盘：%s  %.2f/%5.2f%%", closeList.get(idx), margin, ratio));
        }

        double startPoint = Double.parseDouble(jTextFieldStartPoint.getText());
        double slope = Double.parseDouble(jTextFieldSlope.getText());
        double diffFactor = Double.parseDouble(jTextFieldDiffFactor.getText());
        double basePoint = startPoint + idx * (slope / 100);
        jLabelBasePoint.setText(String.format("基点：%.2f", basePoint));
        double latestPoint = closeList.get(idx);
        jTextFieldLatestPoint.setText(Double.toString(latestPoint));
        double diffRate = latestPoint / basePoint;
        investCoef = Double.parseDouble(jTextFieldInvestCoef.getText());
        double input = (basePoint / investCoef) / Math.pow(diffRate, diffFactor / 10);
        if (diffRate <= 1) {
            jLabelInput.setText(String.format("投入金额：%.2f元", input));
        } else {
            jLabelInput.setText("投入金额：0.00元");
        }
    }

    protected SystemReport updateSystemReport(Strategy stg) {
        SystemReport sr = new SystemReport();

        sr.investRounds = stg.getInvestRounds();
        sr.addInvest = (float) stg.getAddInvest();
        sr.addOutput = (float) stg.getAddOutput();
        sr.netProfit = (float) stg.getNetProfit();
        sr.yieldRate = (float) stg.getYieldRate();
        sr.testYears = (float) testYears;
        sr.investCounts = stg.getInvestCounts();
        sr.investTimeRatio = (float) stg.getInvestTimeRatio();
        sr.maxRoundTime = (float) stg.getMaxRoundTime();
        sr.maxInvestCount = stg.getMaxInvestCount();
        sr.meanInvestCount = (float) stg.getMeanInvestCount();

        sr.meanDailyRate = (float) stg.getMeanDailyRate();
        sr.meanPositionDays = (float) stg.getMeanPositionDays();
        sr.maxInvest = (float) stg.getMaxInvest();
        sr.meanInvest = (float) stg.getMeanInvest();
        sr.maxLoss = (float) stg.getMaxLoss();
        sr.maxLossRatio = (float) stg.getMaxLossRatio();
        sr.meanDiffRate = (float) stg.getMeanDiffRate();
        sr.meanNegaDiffRate = (float) stg.getMeanNegaDiffRate();
        sr.minDiffRate = (float) stg.getMinDiffRate();
        sr.meanInvestRate = (float) stg.getMeanInvestRate();
        sr.maxInvestRate = (float) stg.getMaxInvestRate();

        return sr;
    }

    protected SystemReport updateSimpleReport(String para, Strategy stg) {
        SystemReport sr = new SystemReport(para);

        sr.netProfit = (float) stg.getNetProfit();
        sr.meanDailyRate = (float) stg.getMeanDailyRate();
        sr.maxRoundTime = (float) stg.getMaxRoundTime();
        sr.maxInvest = (float) stg.getMaxInvest();
        sr.investTimeRatio = (float) stg.getInvestTimeRatio();
        sr.meanInvestRate = (float) stg.getMeanInvestRate();
        sr.maxInvestRate = (float) stg.getMaxInvestRate();

        return sr;
    }

    protected void updateTable(SystemReport sr) {
        jTablePoint.setValueAt("定投轮数", 0, 0);
        jTablePoint.setValueAt(sr.investRounds + "轮", 0, 1);
        jTablePoint.setValueAt("累加投入", 1, 0);
        jTablePoint.setValueAt(sr.addInvest + "元", 1, 1);
        jTablePoint.setValueAt("累加产出", 2, 0);
        jTablePoint.setValueAt(sr.addOutput + "元", 2, 1);
        jTablePoint.setValueAt("净利润", 3, 0);
        jTablePoint.setValueAt(sr.netProfit + "元", 3, 1);
        jTablePoint.setValueAt("总收益率", 4, 0);
        jTablePoint.setValueAt(sr.yieldRate + "%", 4, 1);
        jTablePoint.setValueAt("测试年限", 5, 0);
        jTablePoint.setValueAt(sr.testYears + "年", 5, 1);
        jTablePoint.setValueAt("定投笔数", 6, 0);
        jTablePoint.setValueAt(sr.investCounts + "笔", 6, 1);
        jTablePoint.setValueAt("定投时间比", 7, 0);
        jTablePoint.setValueAt(sr.investTimeRatio + "%", 7, 1);
        jTablePoint.setValueAt("最长周期", 8, 0);
        jTablePoint.setValueAt(sr.maxRoundTime + "年", 8, 1);
        jTablePoint.setValueAt("最长定投轮", 9, 0);
        jTablePoint.setValueAt(sr.maxInvestCount + "次", 9, 1);
        jTablePoint.setValueAt("平均定投轮", 10, 0);
        jTablePoint.setValueAt(sr.meanInvestCount + "次", 10, 1);

        jTablePoint.setValueAt("平均日化率", 0, 2);
        jTablePoint.setValueAt("万" + sr.meanDailyRate, 0, 3);
        jTablePoint.setValueAt("平均持仓期", 1, 2);
        jTablePoint.setValueAt(sr.meanPositionDays + "天", 1, 3);
        jTablePoint.setValueAt("最大投入", 2, 2);
        jTablePoint.setValueAt(sr.maxInvest + "元", 2, 3);
        jTablePoint.setValueAt("平均投入", 3, 2);
        jTablePoint.setValueAt(sr.meanInvest + "元", 3, 3);
        jTablePoint.setValueAt("最大亏损", 4, 2);
        jTablePoint.setValueAt(sr.maxLoss + "元", 4, 3);
        jTablePoint.setValueAt("最大回撤比", 5, 2);
        jTablePoint.setValueAt(sr.maxLossRatio + "%", 5, 3);
        jTablePoint.setValueAt("平均离差", 6, 2);
        jTablePoint.setValueAt(sr.meanDiffRate, 6, 3);
        jTablePoint.setValueAt("平均负离差", 7, 2);
        jTablePoint.setValueAt(sr.meanNegaDiffRate, 7, 3);
        jTablePoint.setValueAt("最小负离差", 8, 2);
        jTablePoint.setValueAt(sr.minDiffRate, 8, 3);
        jTablePoint.setValueAt("平均买入比", 9, 2);
        jTablePoint.setValueAt(sr.meanInvestRate, 9, 3);
        jTablePoint.setValueAt("最大买入比", 10, 2);
        jTablePoint.setValueAt(sr.maxInvestRate, 10, 3);
    }

    public void msgLogger(String str) {
        jTextAreaMain.append(str + System.getProperty("line.separator"));
    }

    public void fileLogger(String str) {
        if (fileWriter != null) {
            try {
                fileWriter.write(str + System.getProperty("line.separator"));
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    public void runExeFile(String file) {
        try {
            Runtime rt = Runtime.getRuntime();
            File exeFile = new File(file);
            if (exeFile.exists()) {
                String cmd = "cmd.exe /c " + file;
                rt.exec(cmd);
            } else {
                JOptionPane.showMessageDialog(new JFrame(), "请先安装相关软件到根目录！");
            }
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    public int daysBetween(int idxs, int idxe) {
        String sdate = dateList.get(idxs);
        String edate = dateList.get(idxe);
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Calendar cal = Calendar.getInstance();
        long between_days = 0;
        try {
            cal.setTime(dateFormat.parse(sdate));
            long time1 = cal.getTimeInMillis();
            cal.setTime(dateFormat.parse(edate));
            long time2 = cal.getTimeInMillis();
            between_days = (time2 - time1) / (1000 * 3600 * 24);
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        return Integer.parseInt(String.valueOf(between_days));
    }

    public int daysBetween(String sdate, String edate) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Calendar cal = Calendar.getInstance();
        long between_days = 0;
        try {
            cal.setTime(dateFormat.parse(sdate));
            long time1 = cal.getTimeInMillis();
            cal.setTime(dateFormat.parse(edate));
            long time2 = cal.getTimeInMillis();
            between_days = (time2 - time1) / (1000 * 3600 * 24);
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        return Integer.parseInt(String.valueOf(between_days));
    }

    private String fileIn = "data\\W上证指数.txt";
    public FileWriter fileWriter;

    public String stockName = "W上证指数";
    public String stockCode = "000001";
    public int column = 0;
    public int rows = 0;
    public ArrayList<String> dateList;
    public ArrayList<Double> openList;
    public ArrayList<Double> closeList;
    public ArrayList<Double> priceList;
    public int sIdx = -1;
    public int eIdx = 0;
    public int investDays = 0;
    public double testYears = 0;
    public double investCoef = 1;

    public Strategy strategy;
    public boolean evaluated = false;
    public RankTable rankTable;
    public String investPara;
    public ArrayList<CheckData> chkDataList;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCheckUp;
    private javax.swing.JButton jButtonEvaluate;
    private javax.swing.JButton jButtonFilterCheck;
    private javax.swing.JButton jButtonFilterStart;
    private javax.swing.JButton jButtonInvestChart;
    private javax.swing.JButton jButtonInvestEva;
    private javax.swing.JButton jButtonInvestRecord;
    private javax.swing.JLabel jLabelBasePoint;
    private javax.swing.JLabel jLabelClose;
    private javax.swing.JLabel jLabelCurrentAsset;
    private javax.swing.JLabel jLabelCurrentRatio;
    private javax.swing.JLabel jLabelDash1;
    private javax.swing.JLabel jLabelDash2;
    private javax.swing.JLabel jLabelDash3;
    private javax.swing.JLabel jLabelDash4;
    private javax.swing.JLabel jLabelDate;
    private javax.swing.JLabel jLabelDiffFactor;
    private javax.swing.JLabel jLabelInput;
    private javax.swing.JLabel jLabelInvestCoef;
    private javax.swing.JLabel jLabelLatestPoint;
    private javax.swing.JLabel jLabelPara1;
    private javax.swing.JLabel jLabelPara2;
    private javax.swing.JLabel jLabelPara3;
    private javax.swing.JLabel jLabelPara4;
    private javax.swing.JLabel jLabelSEDash;
    private javax.swing.JLabel jLabelSEDate;
    private javax.swing.JLabel jLabelSlope;
    private javax.swing.JLabel jLabelStartPoint;
    private javax.swing.JLabel jLabelStockName;
    private javax.swing.JLabel jLabelWinLevel;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenu jMenuIndex;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemClear;
    private javax.swing.JMenuItem jMenuItemCopy;
    private javax.swing.JMenuItem jMenuItemDZH;
    private javax.swing.JMenuItem jMenuItemGZYY;
    private javax.swing.JMenuItem jMenuItemImport;
    private javax.swing.JMenuItem jMenuItemSWZQ;
    private javax.swing.JMenuItem jMenuItemSZCZ;
    private javax.swing.JMenuItem jMenuItemSZZS;
    private javax.swing.JMenuItem jMenuItemTDX;
    private javax.swing.JMenuItem jMenuItemYLCY;
    private javax.swing.JMenuItem jMenuItemZZHB;
    private javax.swing.JMenuItem jMenuItemZZJG;
    private javax.swing.JMenu jMenuRun;
    private javax.swing.JPanel jPanelCongfig;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JPanel jPanelSysFilter;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTablePoint;
    private javax.swing.JTextArea jTextAreaMain;
    private javax.swing.JTextField jTextFieldDiffFactor;
    private javax.swing.JTextField jTextFieldEDate;
    private javax.swing.JTextField jTextFieldInvestCoef;
    private javax.swing.JTextField jTextFieldLatestPoint;
    private javax.swing.JTextField jTextFieldPE1;
    private javax.swing.JTextField jTextFieldPE2;
    private javax.swing.JTextField jTextFieldPE3;
    private javax.swing.JTextField jTextFieldPE4;
    private javax.swing.JTextField jTextFieldPS1;
    private javax.swing.JTextField jTextFieldPS2;
    private javax.swing.JTextField jTextFieldPS3;
    private javax.swing.JTextField jTextFieldPS4;
    private javax.swing.JTextField jTextFieldSDate;
    private javax.swing.JTextField jTextFieldSlope;
    private javax.swing.JTextField jTextFieldStartPoint;
    private javax.swing.JTextField jTextFieldWinLevel;
    // End of variables declaration//GEN-END:variables
}
